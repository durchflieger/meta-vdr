--- a/devstatus.c
+++ b/devstatus.c
@@ -51,12 +51,13 @@
    return ret;
 }
 
-cChannel* getTunedChannel(cDevice *d)  {
+const cChannel* getTunedChannel(cDevice *d)  {
    int channelNo;
-   cChannel *channel = NULL;
+   const cChannel *channel = NULL;
 
-   for (channelNo = 1; channelNo <= Channels.MaxNumber(); channelNo++) {
-      if( (channel = Channels.GetByNumber(channelNo)) ) {
+   LOCK_CHANNELS_READ;
+   for (channelNo = 1; channelNo <= Channels->MaxNumber(); channelNo++) {
+      if( (channel = Channels->GetByNumber(channelNo)) ) {
          if (d->IsTunedToTransponder(channel)) {
            return channel;
          }
@@ -66,20 +67,21 @@
 }
 
 int getTunedFrequency (cDevice *device) {
-    cChannel *tunedChannel = getTunedChannel(device);
+    const cChannel *tunedChannel = getTunedChannel(device);
     return tunedChannel ? tunedChannel->Frequency() : 0;
 }
 
 
-cChannel* nextTransponderChannel( cDevice *device, int direction) {
+const cChannel* nextTransponderChannel( cDevice *device, int direction) {
 // search for the next transponder (direction=1) or the previous one (-1) 
    int channelNo;
-   cChannel *channel = NULL;
-   cChannel *resChannel = NULL;
+   const cChannel *channel = NULL;
+   const cChannel *resChannel = NULL;
    int oldQRG = getTunedFrequency(device);
             
-   for (channelNo = 1; channelNo <= Channels.MaxNumber(); channelNo++) {
-      if( (channel = Channels.GetByNumber(channelNo)) ) {
+   LOCK_CHANNELS_READ;
+   for (channelNo = 1; channelNo <= Channels->MaxNumber(); channelNo++) {
+      if( (channel = Channels->GetByNumber(channelNo)) ) {
           if( device->ProvidesSource( channel->Source() ) ) { // same source (DVB-T, -S, ...)
              if( !ISTRANSPONDER(channel->Frequency(),oldQRG) ) {  //not the same transponder
                if( channel->Frequency()*direction > oldQRG*direction ) {  
@@ -102,9 +104,9 @@
 public:
     char* name;
     const cDevice* device;
-    cTimer* timer;
+    const cTimer* timer;
 public:
-    cRecObj(const char* Name, const cDevice* Device, cTimer* Timer) {
+    cRecObj(const char* Name, const cDevice* Device, const cTimer* Timer) {
             name = strdup(Name);
             device = Device;
             timer = Timer;
@@ -152,7 +154,7 @@
   int GetChannelNr()  { return ChannelNr; }
   bool IsChannel() { return ChannelNr != 0; }
   bool HasDevice() { return DeviceNr >= 0; }
-  cChannel* GetChannel()  { return Channels.GetByNumber(ChannelNr); }
+  //cChannel* GetChannel()  { return Channels.GetByNumber(ChannelNr); }
   cDevice* GetDevice() { return cDevice::GetDevice(DeviceNr); };
 };
 
@@ -281,10 +283,11 @@
                  cMenuRecItem* norec = NULL;
                  char* output = NULL;
                  int channelNo;
-                 cChannel *channel = NULL;
+                 const cChannel *channel = NULL;
        
-                 for (channelNo = 1; channelNo <= Channels.MaxNumber(); channelNo++) {
-                    if( (channel = Channels.GetByNumber(channelNo)) ) {
+                 LOCK_CHANNELS_READ;
+                 for (channelNo = 1; channelNo <= Channels->MaxNumber(); channelNo++) {
+                    if( (channel = Channels->GetByNumber(channelNo)) ) {
                        if (d->IsTunedToTransponder(channel)) {
                             bool currentLive = channelNo == d->CurrentChannel() 
                                                && (i == cDevice::ActualDevice()->CardIndex());
@@ -353,8 +356,9 @@
 
     eOSState Play(char* file) {
             // Play the selected recording 
-            cRecording* recordingFound = NULL;
-            for(cRecording* recording = Recordings.First(); recording; recording = Recordings.Next(recording))
+            const cRecording* recordingFound = NULL;
+            LOCK_RECORDINGS_READ;
+            for(const cRecording* recording = Recordings->First(); recording; recording = Recordings->Next(recording))
                 if (strstr(recording->Title(), file))
                     recordingFound = recording;
             if (!recordingFound)
@@ -392,7 +396,7 @@
                     ri = (cMenuRecItem*)Get(Current());
                     if( ri->Selectable() & ri->HasDevice() ) {
 
-                        cChannel *newChannel = nextTransponderChannel(
+                        const cChannel *newChannel = nextTransponderChannel(
                             ri->GetDevice(), ((Key==k9)||(Key==kChanUp)? 1:-1)
                         );
                         if( newChannel != NULL ) 
@@ -409,7 +413,8 @@
                     ri = (cMenuRecItem*)Get(Current());
                     if (ri->Selectable()) {
                         if (ri->IsChannel()) {
-                            Channels.SwitchTo(ri->GetChannelNr());
+                            LOCK_CHANNELS_READ;
+                            Channels->SwitchTo(ri->GetChannelNr());
                             Write(); //repaint; maybe 'Live' has changed
                             return osContinue;
                         } else
@@ -639,7 +644,8 @@
 #endif
     if (Name) {
         // insert new timers currently recording in TimersRecording
-        for (cTimer *ti = Timers.First(); ti; ti = Timers.Next(ti))
+        LOCK_TIMERS_READ;
+        for (const cTimer *ti = Timers->First(); ti; ti = Timers->Next(ti))
             if (ti->Recording()) {
                 // check if this is a new entry
                 bool bFound = false;
